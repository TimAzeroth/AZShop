<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.azeroth.project.repository.AdminRepository">

    <select id="findCard" parameterType="com.azeroth.project.domain.CardDomain">
        SELECT
            c_num,
            c_year,
            c_month,
            c_cvc,
            balance
        FROM
            card
        where
            c_num = #{c_num}
            AND c_year = #{c_year}
            AND c_month = #{c_month}
            AND c_cvc = #{c_cvc}
    </select>
    
    <update id="updateCard" flushCache="true" parameterType="com.azeroth.project.domain.CardDomain">
        UPDATE Card set
            balance = #{balance}
        WHERE
            c_num = #{c_num}
    </update>
    <select id="ListByUsers" parameterType="java.util.ArrayList">
        select
            authority_id, username, nickname, email, profileimg, u_status, phone
        from User
    </select>

    <select id="findByUser" parameterType="com.azeroth.project.domain.UserDomain">
        select
            id, authority_id, password, username, nickname, email, profileimg, u_status, phone
        from
            user
        where
            username = #{username}
    </select>


    <select id="userBuyProduct" parameterType="java.util.ArrayList">
        SELECT
            p.id 'product_id',
            p.p_img 'product_img',
            p.p_name 'product_name',
            p.price 'product_price',
            p.stock 'product_stork',
            u.username 'user_account',
            u.nickname 'user_name',
            s.amount 'order_stork'
        FROM
            product p, USER u, sales s
        WHERE
            s.p_id = p.id
            AND u.username = s.u_username
            AND u.username = #{username}
    </select>

    <select id="writeReviewByUser" parameterType="java.util.ArrayList">
        select
            r.id "id",
            r.user_id "user_id",
            r.product_id "product_id",
            r.content "content",
            r.reviewdate "reviewdate",
            r.reply "reply",
            r.replydate "replydate",
            u.username "username",
            p.p_name "p_name",
            p.p_img "p_img",
            p.detail "detail",
            p.price "price",
            p.stock "stock",
            p.p_rank "p_rank",
            c.mainname "mainname",
            c.subname "subname"
        from
            review r, user u, product p, category c
        where
            r.user_id = u.id
            and r.product_id = p.id
            and p.main_cate = c.maincode
            and p.sub_cate = c.subcode
            and u.username = #{username}
    </select>
    <select id="NoAnswerReview" parameterType="java.util.ArrayList">
        select
            id,
            user_id,
            product_id,
            content,
            reviewdate,
            reply,
            replydate
        from
            review r
        where
            reply is null
            or reply =''
    </select>
    <select id="userBuyList" parameterType="java.util.ArrayList">
        SELECT
            id,
            u_username,
            p_id,
            amount,
            address,
            address_detail,
            postcode,
            deliveryreq,
            tracknum
        FROM sales
        where u_username = #{username}
    </select>
    <select id="findByUsername" parameterType="com.azeroth.project.domain.UserDomain">
        SELECT
            id,
            authority_id,
            username,
            password,
            nickname,
            email,
            profileimg,
            u_status,
            phone,
            logdate,
            regdate
        FROM user
        WHERE
            username = #{username}
    </select>
    <select id="ProductManagementList" parameterType="com.azeroth.project.domain.ProductManagement">
        SELECT
            p.id,
            p.p_name,
            p.main_cate,
            p.sub_cate,
            p.p_img,
            p.detail,
            p.price,
            p.stock,
            p.p_rank,
            c.mainname,
            c.subname
        FROM Product p
        LEFT JOIN Category c ON p.main_cate = c.maincode AND p.sub_cate = c.subcode
        ORDER BY p.p_rank, p.p_name;
    </select>

    <update id="AnswerReview" flushCache="true">
        UPDATE review
            SET reply = #{reply}
        WHERE id = #{id}
    </update>
</mapper>